version: '3'

tasks:
  # 停止容器
  stop:
    cmds:
      - docker stop $(docker ps -q)

  # 建立網路 home
  network:
    cmds:
      # 檢查網路是否存在, 不然就建立它
      - |
        if ! docker network ls | grep -qw home; then
          docker network create home
        fi

  # 啟動資料庫
  db:
    deps: [ network ]
    cmds:
      # 啟動 MySQL
      - docker rm -f -v home-mysql || true
      - docker image rm home-mysql || true
      - docker build -t home-mysql -f MySQL/Dockerfile .
      - docker volume rm dbmysql-volume || true
      - docker run -d --name home-mysql --network home -v dbmysql-volume:/var/lib/mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=root home-mysql

  # 啟動 Nginx
  nginx:
    deps: [ network ]
    cmds:
      - docker rm -f -v home-nginx || true
      - docker image rm home-nginx || true
      - docker build -t home-nginx -f Nginx/Dockerfile .
      - |
          case "$(uname)" in
            MINGW*|CYGWIN*|MSYS*)
              echo "Windows"
              echo "Windows"
              echo "Windows"
              docker run -d --name home-nginx --network home -v "C:\data\nginx\:/data/nginx" -p 80:80 -p 443:443 -p 8080:8080 home-nginx
              ;;
            *)
              echo "Linux"
              docker run -d --name home-nginx --network home -v /data/nginx:/data/nginx -p 80:80 -p 443:443 -p 8080:8080 home-nginx
              ;;
          esac
  # 啟動 WordPress
  wordpress:
    deps: [ network ]
    cmds:
      - docker build -t home-wordpress -f WordPress/Dockerfile .
      - docker stop home-wordpress || true
      - docker rm home-wordpress || true
      - docker run --name home-wordpress --network home -p 8080:80 -d home-wordpress
